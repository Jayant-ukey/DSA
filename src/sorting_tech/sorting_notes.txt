Sorting

1. Bubble sorting:
	- Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in the wrong order.
	- This algorithm is not suitable for large data sets as its average and worst-case time complexity is quite high.
	
	= Here the largest element get sort first.
	- On 2nd round 2nd largest element we will get.
	- On 3rd round 3rd largest likewise goes on.
	
	
Bubble Sort algorithm:
	1. traverse from left and compare adjacent elements and the higher one is placed at right side. 
	2. In this way, the largest element is moved to the rightmost end at first. 
	3. This process is then continued to find the second largest and place it and so on until the data is sorted.
	
	
Imp : Number of rounds will be array length -1.

Time Complexity: O(N2)
Auxiliary Space: O(1)

Advantages of Bubble Sort:
	Bubble sort is easy to understand and implement.
	It does not require any additional memory space.
	It is a stable sorting algorithm, meaning that elements with the same key value maintain their relative order in the sorted output.

Disadvantages of Bubble Sort:
	Bubble sort has a time complexity of O(N2) which makes it very slow for large data sets.
	Bubble sort is a comparison-based sorting algorithm, which means that it requires a comparison operator to determine the relative order of elements in the input data set. It can limit the efficiency of the algorithm in certain cases.
	
	
	
--------------------------

2. Selection sort

Selection sort is a simple and efficient sorting algorithm that works by repeatedly selecting the smallest (or largest) element from the unsorted portion of the list and moving it to the sorted portion of the list. 

Time Complexity: The time complexity of Selection Sort is O(N2) as there are two nested loops:

One loop to select an element of Array one by one = O(N)
Another loop to compare that element with every other Array element = O(N)
Therefore overall complexity = O(N) * O(N) = O(N*N) = O(N2)
Auxiliary Space: O(1) as the only extra memory used is for temporary variables while swapping two values in Array. The selection sort never makes more than O(N) swaps and can be useful when memory writing is costly. 

Advantages of Selection Sort Algorithm
	Simple and easy to understand.
	Works well with small datasets.
	
Disadvantages of the Selection Sort Algorithm
	Selection sort has a time complexity of O(n^2) in the worst and average case.
	Does not work well on large datasets.
	Does not preserve the relative order of items with equal keys which means it is not stable.